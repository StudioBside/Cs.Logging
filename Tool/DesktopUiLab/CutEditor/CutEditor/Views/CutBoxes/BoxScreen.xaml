<UserControl
    x:Class="CutEditor.Views.CutBoxes.BoxScreen"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:CutEditor.Views.CutBoxes"
    mc:Ignorable="d" 
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:lcvt="clr-namespace:CutEditor.Converters"
    xmlns:converters="clr-namespace:Du.Presentation.Converters;assembly=Du.Presentation"
    xmlns:nkm="clr-namespace:NKM;assembly=CutEditor.Model"
    xmlns:extensions="clr-namespace:Du.Presentation.Extensions;assembly=Du.Presentation"
    xmlns:models="clr-namespace:CutEditor.Model;assembly=CutEditor.Model"
    d:DesignHeight="450" d:DesignWidth="800">

    <!--컨트롤 : 화면-->
    <Border Background="{StaticResource ScreenBoxBrush}"
             Visibility="{Binding ShowScreenSection, Converter={converters:BoolToVisibilityConverter}}">
        <StackPanel Orientation="Horizontal" Margin="5">
            <ui:Button Margin="0,0,10,0">
                <TextBlock TextAlignment="Center">
                     <Run>Filter</Run>
                     <LineBreak/>
                     <Run>Type</Run>
                </TextBlock>
            </ui:Button>

            <ui:DropDownButton Margin="0,0,10,0">
                <!--값이 없을 때는 한글 표기. 값이 있을때는 배경색을 다르게 표기-->
                <ui:DropDownButton.Style>
                    <Style TargetType="ui:DropDownButton" BasedOn="{StaticResource {x:Type ui:DropDownButton}}">
                        <Setter Property="Content" Value="{Binding Cut.TransitionEffect}"/>
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.TransitionEffect}" Value="{x:Null}">
                                <Setter Property="Content" Value="전환효과"/>
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:DropDownButton.Style>
                <ui:DropDownButton.Flyout>
                    <ContextMenu ItemsSource="{Binding Source={extensions:EnumValues {x:Type nkm:TransitionEffect}}}">
                        <ContextMenu.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding .}"
                                      Command="{Binding DataContext.SetTransitionEffectCommand, RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                      CommandParameter="{Binding .}"/>
                            </DataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </ui:DropDownButton.Flyout>
            </ui:DropDownButton>

            <ui:DropDownButton Margin="0,0,10,0">
                <!--값이 없을 때는 한글 표기. 값이 있을때는 배경색을 다르게 표기-->
                <ui:DropDownButton.Style>
                    <Style TargetType="ui:DropDownButton" BasedOn="{StaticResource {x:Type ui:DropDownButton}}">
                        <Setter Property="Content" Value="{Binding Cut.TransitionControl}"/>
                        <Setter Property="Background" Value="{StaticResource HasValueBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.TransitionControl}" Value="{x:Null}">
                                <Setter Property="Content" Value="전환방향"/>
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:DropDownButton.Style>
                <ui:DropDownButton.Flyout>
                    <ContextMenu ItemsSource="{Binding Source={extensions:EnumValues {x:Type models:Enums+TransitionControl}}}">
                        <ContextMenu.ItemTemplate>
                            <DataTemplate>
                                <MenuItem Header="{Binding .}"
                                      Command="{Binding DataContext.SetTransitionControlCommand, RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                      CommandParameter="{Binding .}"/>
                            </DataTemplate>
                        </ContextMenu.ItemTemplate>
                    </ContextMenu>
                </ui:DropDownButton.Flyout>
            </ui:DropDownButton>

            <ui:Button Margin="0,0,10,0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock TextAlignment="Center" Text="Fade 제어"
                                Margin="0,0,20,0"/>
                    <Rectangle Width="20" Height="20" Margin="0,0,10,0"
                                Fill="White"/>
                    <TextBlock TextAlignment="Center" Text="->"  Margin="0,0,10,0"
                                VerticalAlignment="Center"/>
                    <Rectangle Width="20" Height="20"
                                Fill="Black"/>
                </StackPanel>
            </ui:Button>

            <ui:Button Margin="0,0,10,0" Content="Crash"/>
            <ui:Button Margin="0,0,10,0" Content="Flash"/>

            <ui:Button Margin="0,0,10,0" Content="BG"
                       Command="{Binding PickBgFileNameCommand}"
                       ToolTip="{Binding Cut.BgFileName}">
                <!--값이 있을때는 배경색을 다르게 표기-->
                <ui:Button.Style>
                    <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                        <Setter Property="Background" Value="{StaticResource SoundBoxBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Cut.BgFileName}" Value="{x:Null}">
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:Button.Style>
            </ui:Button>

            <ui:Button Margin="0,0,10,0">
                <TextBlock TextAlignment="Center">
                     <Run>BG</Run>
                     <LineBreak/>
                     <Run>제어</Run>
                </TextBlock>
            </ui:Button>

            <ContentPresenter Width="90"
                              VerticalAlignment="Center"
                              Content="{Binding Cut.BgFileName, Converter={lcvt:BgFileToPreviewConverter}}"/>

        </StackPanel>
    </Border>
    
</UserControl>
