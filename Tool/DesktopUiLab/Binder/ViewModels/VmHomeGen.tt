<#@ template language="C#" debug="true" hostspecific="true" #>
<#@ output extension=".cs" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// <auto-generated />
#nullable enable
namespace Binder.ViewModels;

using Binder.Models;
using CommunityToolkit.Mvvm.Input;

public partial class VmHome // generated by T4
{
<#
    // 속성 목록 정의
    var properties = new List<(string Type, string Name, bool GenCommandSet)>
    {
        ("BindFile?", "SelectedBindFile", GenCommandSet: false),
        ("Extract?", "SelectedExtract", GenCommandSet: true),
        ("ExtractEnum?", "SelectedExtractEnum", GenCommandSet: true),
        ("ExtractString?", "SelectedExtractString", GenCommandSet: true)
    };

    // 속성 생성
    foreach (var prop in properties)
    {
#>
    // ---------- 속성 : <#= prop.Name #> ----------
    private <#= prop.Type #> <#= prop.Name.Substring(0, 1).ToLower() + prop.Name.Substring(1) #>;
    public <#= prop.Type #> <#= prop.Name #>
    {
        get => this.<#= prop.Name.Substring(0, 1).ToLower() + prop.Name.Substring(1) #>;
        set => this.SetProperty(ref this.<#= prop.Name.Substring(0, 1).ToLower() + prop.Name.Substring(1) #>, value);
    }

<#
    }

    // 명령 생성
    foreach (var prop in properties)
	{
        if (prop.GenCommandSet == false)
        {
            continue;
        }

        var prefix = prop.Type.Substring(0, prop.Type.Length - 1);
#>
	// ---------- 명령 : <#= prop.Type #> ----------
	public IRelayCommand <#= prefix #>AddCommand { get; }
	public IRelayCommand <#= prefix #>EditCommand { get; }
	public IRelayCommand <#= prefix #>DeleteCommand { get; }

<#
    }
#>
}
